package account.stmt;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Properties;

import account.Account;
import dao.AccountDAO;

// Account
// Statement
// Database Access Object
public class AccountSTMTDAOImpl implements AccountDAO {

	// DBMS 연결 객체
	private Connection conn;
	// 연결정보를 가지고 질의를 실행하는 객체
	private Statement stmt;
	// 검색질의의 결과를 전달 받는 객체
	private ResultSet rs;
	
	public AccountSTMTDAOImpl() {
		
		try {
			Class.forName("com.mysql.cj.jdbc.Driver");
			String url = "jdbc:mysql://localhost:3306/smart";
			String user = "smart";
			String password = "12345";
			//conn = DriverManager.getConnection(url, user, password);
			//conn = DriverManager.getConnection(url+"?user="+user+"&password="+password);
			Properties prop = new Properties();
			prop.setProperty("user", user);
			prop.setProperty("password",password);
			conn = DriverManager.getConnection(url,prop);
		} catch (ClassNotFoundException e) {
			System.out.println("Diver class를 찾을 수 없음");
		} catch (SQLException e) {
			System.out.println("연결 정보 오류 : " + e.getMessage());
		}
	}
	
	// account의 정보를 tbl_account table에 삽입
	@Override
	public void insert(Account account) {
		
		try {
			stmt = conn.createStatement();
			String sql = "INSERT INTO tbl_account "
					+ " VALUES('"+account.getAno()+"', '"
						+ account.getOwner()+"', "
						+ account.getBalance()+", '"
						+ account.getPassword()+"')";
			stmt.executeUpdate(sql);
		} catch (SQLException e) {
			System.out.println("query 오류 : "+ e.getMessage());
		} finally {
			try {
				if(stmt != null) stmt.close();
			} catch (SQLException e) {}
		}
	}

	@Override
	public int update(Account account) {
		// TODO Auto-generated method stub
		return 0;
	}

	@Override
	public Account selectAccount(String ano) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Account selectAccount(String ano, String password) {
		// TODO Auto-generated method stub
		return null;
	}

}
