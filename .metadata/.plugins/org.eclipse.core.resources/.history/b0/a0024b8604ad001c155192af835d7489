package t08_thread_pool;

import java.util.concurrent.*;

public class ExecuteExample {

	public static void main(String[] args) {
		// 초기 스레드 수 : ExecutorService 객체가 생성될 때 기본적으로 생성되는 스레드 수
		// 코어 스레드 수 : 스레드가 증가한 후 사용되지 않는 스레드를 스레드 풀에서 제거하지않고 최소한으로 유지할 개수
		// 최대 스레드 수 : 스레드 풀에서 관리하는 최대 스레드 수
		/*
		 * 		newCachedThreadPool()
		 * 		초기스레드 수 , 코어 스레드 수는 0개
		 * 		최대 스레드 수는 Integer.MAX_VALUE
		 * 		스레드 개수 보다 작업 개수가 많으면 새로운 스레드를 생성하여 작업 처리
		 * 		만약 일이 없는 스레드가 60초 동안 유지되면 스레드를 종료시키고 제거
		 * 
		 * 		newFixedThreadPool(int nThreads)
		 * 		초기 스레드 수 0개  코어 스레드 수와 최대 스레드 수를 nThreads값으로 지정
		 */
		// java.util.concurrent.*
		ExecutorService exe = Executors.newFixedThreadPool(3);
		for(int i=0; i<16; i++) {
			Runnable
		}
	}

}
